@page "/"
@using BlazorCurrentDevice
@inject ICurrentDeviceService CurrentDeviceService

<h1 class="colour-text big-text">Blazor Current Device Demo</h1>
<h3 class="colour-text">User Agent: @UserAgent</h3>

@if (Desktop)
{
    <p class="colour-text">
        <i class="fa-solid fa-computer"></i> Desktop
    </p>
}
else if (Mobile)
{
    <p class="colour-text">
        <i class="fa-solid fa-mobile-screen-button"></i> Mobile
    </p>
}
else if (Tablet)
{
    <p class="colour-text">
        <i class="fa-solid fa-tablet-screen-button"></i> Tablet
    </p>
}

@if(Orientation == "portrait")
{
    <p class="colour-text">
        <i class="fa-solid fa-up-down"></i> Portrait
    </p>
}
else if(Orientation == "landscape")
{
    <p class="colour-text">
        <i class="fa-solid fa-left-right"></i> Landscape
    </p>
}

@if (Windows)
{
    <p class="colour-text">
        <i class="fa-brands fa-windows"></i> Windows
    </p>
}
else if (Android)
{
    <p class="colour-text">
        <i class="fa-brands fa-android"></i> Android
    </p>
    
}
else if (iOS)
{
    <p class="colour-text">
        <i class="fa-brands fa-apple"></i> iOS
    </p>
}
else if (Blackberry)
{
    <p class="colour-text">
        <i class="fa-brands fa-blackberry"></i> Blackberry
    </p>
}

<div>
        <p class="@(AndroidPhone ? "Greentext" : "Greytext")">@AndroidPhone AndroidPhone</p>
        <p class="@(AndroidTablet ? "Greentext" : "Greytext")">@AndroidTablet AndroidTablet</p>
        <p class="@(Blackberry ? "Greentext" : "Greytext")">@Blackberry Blackberry</p>
        <p class="@(BlackberryPhone ? "Greentext" : "Greytext")">@BlackberryPhone BlackberryPhone</p>
        <p class="@(BlackberryTablet ? "Greentext" : "Greytext")">@BlackberryTablet BlackberryTablet</p>
        <p class="@(Desktop ? "Greentext" : "Greytext")">@Desktop Desktop</p>
        <p class="@(iOS ? "Greentext" : "Greytext")">@iOS iOS</p>
        <p class="@(iPad ? "Greentext" : "Greytext")">@iPad iPad</p>
        <p class="@(iPhone ? "Greentext" : "Greytext")">@iPhone iPhone</p>
        <p class="@(iPod ? "Greentext" : "Greytext")">@iPod iPod</p>
        <p class="@(MacOs ? "Greentext" : "Greytext")">@MacOs MacOs</p>
        <p class="@(MeeGo ? "Greentext" : "Greytext")">@MeeGo MeeGo</p>
        <p class="@(Mobile ? "Greentext" : "Greytext")">@Mobile Mobile</p>
        <p class="@(Tablet ? "Greentext" : "Greytext")">@Tablet Tablet</p>
        <p class="@(Television ? "Greentext" : "Greytext")">@Television Television</p>
        <p class="@(Windows ? "Greentext" : "Greytext")">@Windows Windows</p>
        <p class="@(WindowsPhone ? "Greentext" : "Greytext")">@WindowsPhone WindowsPhone</p>
        <p class="@(WindowsTablet ? "Greentext" : "Greytext")">@WindowsTablet WindowsTablet</p>
        
        <p class="LightBlueText">Orientation @Orientation</p>
        <p class="LightBlueText">OS @OS</p>
</div>

<p class="colour-text">And more! Not seeing what you want in here <a href="https://github.com/HugoVG/CurrentDevice/issues/new" target="_blank">Make an Issue on github!<i class="fa-solid fa-link fa-xs"></i></a></p>

@code{

    bool Android { get; set; }
    bool AndroidPhone { get; set; }
    bool AndroidTablet { get; set; }
    bool Blackberry { get; set; }
    bool BlackberryPhone { get; set; }
    bool BlackberryTablet { get; set; }
    //bool Cordova { get; set; }
    bool Desktop { get; set; }
    bool FireFoxOs { get; set; }
    bool FireFoxOsPhone { get; set; }
    bool FireFoxOsTablet { get; set; }
    bool iOS { get; set; }
    bool iPad { get; set; }
    bool iPhone { get; set; }
    bool iPod { get; set; }
    bool Landscape { get; set; }
    bool MacOs { get; set; }
    bool MeeGo { get; set; }
    bool Mobile { get; set; }
    bool NodeWebkit { get; set; }
    string Orientation { get; set; }
    string OS { get; set; }
    bool Portrait { get; set; }
    bool Tablet { get; set; }
    bool Television { get; set; }
    string Type { get; set; }
    bool Windows { get; set; }
    bool WindowsPhone { get; set; }
    bool WindowsTablet { get; set; }

    private string UserAgent { get; set; }


    protected override async Task OnInitializedAsync()
    {
        // Get the user agent using JavaScript interop
        UserAgent = await CurrentDeviceService.GetUserAgent();
        Android = await CurrentDeviceService.Android();
        AndroidPhone = await CurrentDeviceService.AndroidPhone();
        AndroidTablet = await CurrentDeviceService.AndroidTablet();
        Blackberry = await CurrentDeviceService.Blackberry();
        BlackberryPhone = await CurrentDeviceService.BlackberryPhone();
        BlackberryTablet = await CurrentDeviceService.BlackberryTablet();
        Desktop = await CurrentDeviceService.Desktop();
        iOS = await CurrentDeviceService.iOS();
        iPad = await CurrentDeviceService.iPad();
        iPhone = await CurrentDeviceService.iPhone();
        iPod = await CurrentDeviceService.iPod();
        Landscape = await CurrentDeviceService.Landscape();
        MacOs = await CurrentDeviceService.MacOs();
        MeeGo = await CurrentDeviceService.MeeGo();
        Mobile = await CurrentDeviceService.Mobile();
        Orientation = await CurrentDeviceService.Orientation();
        OS = await CurrentDeviceService.OS();
        Portrait = await CurrentDeviceService.Portrait();
        Tablet = await CurrentDeviceService.Tablet();
        Television = await CurrentDeviceService.Television();
        Type = await CurrentDeviceService.Type();
        Windows = await CurrentDeviceService.Windows();
        WindowsPhone = await CurrentDeviceService.WindowsPhone();
        WindowsTablet = await CurrentDeviceService.WindowsTablet();
        
    }
}